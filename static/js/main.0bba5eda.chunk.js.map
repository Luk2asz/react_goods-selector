{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","reset","forEach","good","element","document","getElementById","classList","remove","button","querySelector","contains","setAttribute","textContent","setState","handleClick","add","overButton","otherButton","this","className","type","onClick","map","id","React","Component","ReactDOM","render"],"mappings":"oPASaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,MAAQ,WACNJ,EAAMK,SAAQ,SAAAC,GACZ,IAAMC,EAA6BC,SAASC,eAAT,UAA2BH,IAE9D,GAAIC,EAAS,CACXA,EAAQG,UAAUC,OAAO,gCACzB,IAAMC,EAA4BL,EAAQM,cAAc,WAEpDD,GAAUA,EAAOF,UAAUI,SAAS,aACtCF,EAAOF,UAAUC,OAAO,WACxBC,EAAOG,aAAa,UAAW,aAC/BH,EAAOI,YAAc,SAK3B,EAAKC,SAAS,CAAEd,aAAc,QArBlC,EAwBEe,YAAc,SAACZ,GACb,IAAMC,EAA6BC,SAASC,eAAT,UAA2BH,IAE9D,GAAIC,EACF,GAAIA,EAAQG,UAAUI,SAAS,gCAC7B,EAAKV,YACA,CAGL,GAFA,EAAKA,QAEDG,EAAS,CACXA,EAAQG,UAAUS,IAAI,gCACtB,IAAMP,EAA4BL,EAAQM,cAAc,WAEpDD,IACFZ,EAAMK,SAAQ,SAAAC,GACZ,IAAMc,EAAgCZ,SAASC,eAAT,UAA2BH,IAEjE,GAAIc,EAAY,CACd,IAAMC,EACJD,EAAWP,cAAc,WAEvBQ,IACFA,EAAYX,UAAUC,OAAO,WAC7BU,EAAYN,aAAa,UAAW,aACpCM,EAAYL,YAAc,SAKhCJ,EAAOG,aAAa,UAAW,gBAC/BH,EAAOF,UAAUS,IAAI,WACrBP,EAAOI,YAAc,KAIzB,EAAKC,SAAS,CAAEd,aAAcG,MA3DtC,4CAgEE,WAAU,IAAD,OACCH,EAAiBmB,KAAKpB,MAAtBC,aAER,OACE,uBAAMoB,UAAU,oBAAhB,UACGpB,EACC,qBAAIoB,UAAU,sCAAd,UACGpB,EACA,IAFH,cAKE,wBACE,UAAQ,cACRqB,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKlB,WAIlB,oBAAImB,UAAU,QAAd,+BAKF,uBAAOA,UAAU,QAAjB,SACE,gCACGvB,EAAM0B,KAAI,SAAApB,GAAI,OACb,qBACE,UAAQ,OACRqB,GAAIrB,EAEJiB,UAAoB,QAATjB,EACP,+BACA,GANN,UAQE,6BACE,wBACE,UAAkB,QAATA,EAAiB,eAAiB,YAC3CkB,KAAK,SACLD,UAAoB,QAATjB,EAAiB,iBAAmB,SAC/CmB,QAAS,kBAAM,EAAKP,YAAYZ,IAJlC,SAMY,QAATA,EAAiB,IAAM,QAI5B,oBAAI,UAAQ,YAAYiB,UAAU,eAAlC,SACGjB,MAjBEA,iBA9FrB,GAAyBsB,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAvB,SAASC,eAAe,W","file":"static/js/main.0bba5eda.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable no-return-assign */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  reset = () => {\n    goods.forEach(good => {\n      const element:HTMLElement | null = document.getElementById(`${good}`);\n\n      if (element) {\n        element.classList.remove('has-background-success-light');\n        const button:HTMLElement | null = element.querySelector('.button');\n\n        if (button && button.classList.contains('is-info')) {\n          button.classList.remove('is-info');\n          button.setAttribute('data-cy', 'AddButton');\n          button.textContent = '+';\n        }\n      }\n    });\n\n    this.setState({ selectedGood: null });\n  };\n\n  handleClick = (good: string) => {\n    const element:HTMLElement | null = document.getElementById(`${good}`);\n\n    if (element) {\n      if (element.classList.contains('has-background-success-light')) {\n        this.reset();\n      } else {\n        this.reset();\n\n        if (element) {\n          element.classList.add('has-background-success-light');\n          const button:HTMLElement | null = element.querySelector('.button');\n\n          if (button) {\n            goods.forEach(good => {\n              const overButton:HTMLElement | null = document.getElementById(`${good}`);\n\n              if (overButton) {\n                const otherButton:HTMLElement | null\n                = overButton.querySelector('.button');\n\n                if (otherButton) {\n                  otherButton.classList.remove('is-info');\n                  otherButton.setAttribute('data-cy', 'AddButton');\n                  otherButton.textContent = '+';\n                }\n              }\n            });\n\n            button.setAttribute('data-cy', 'RemoveButton');\n            button.classList.add('is-info');\n            button.textContent = '-';\n          }\n        }\n\n        this.setState({ selectedGood: good });\n      }\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood ? (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {selectedGood}\n            {' '}\n            is selected\n\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.reset}\n            />\n          </h1>\n        ) : (\n          <h1 className=\"title\">\n            No goods selected\n          </h1>\n        )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                data-cy=\"Good\"\n                id={good}\n                key={good}\n                className={good === 'Jam'\n                  ? 'has-background-success-light'\n                  : ''}\n              >\n                <td>\n                  <button\n                    data-cy={good === 'Jam' ? 'RemoveButton' : 'AddButton'}\n                    type=\"button\"\n                    className={good === 'Jam' ? 'button is-info' : 'button'}\n                    onClick={() => this.handleClick(good)}\n                  >\n                    {good === 'Jam' ? '-' : '+'}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}